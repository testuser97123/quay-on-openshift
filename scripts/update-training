#!/bin/env bash

training_lang=${training_lang:-en}
training_dir=../

# TODO: can't use other languages until the uri loop is localized
case ${training_lang} in
  en )
    taxonomy_training=1151
    cer_locale=en_US
    ;;
  de )
    taxonomy_training=Kurs
    ;;
  pt-br|es )
    taxonomy_training=Curso
    ;;
  fr )
    taxonomy_training=Cours
    ;;
  it )
    taxonomy_training=Adedicato
    ;;
  zh )
    taxonomy_training=课程
    ;;
  ko )
    taxonomy_training=과정
    ;;
  ja )
    taxonomy_training=コース
esac
 
if [ -d canned-content/${cer_locale}/Base/training ]; then
  echo updating canned-content training
  training_path=canned-content/${cer_locale}/Base/training
elif [ -d content/training ]; then
  echo updating initialized CER training
  training_path=content/training
else
  echo cannot find training directory, please run from CER root directory
  exit 1
fi

# there were 4 pages of courses when this was written, ymmv
for page in {0..3}; do
  TRAINING_URI="https://www.redhat.com/${training_lang}/services/training/all-courses-exams?page=${page}&f%5B0%5D=taxonomy_training_tid%3A${taxonomy_training}"
  # TRAINING_URI="https://www.redhat.com/${training_lang}/services/training/all-courses-exams?page=${page}&f%5B0%5D=taxonomy_training%3A${taxonomy_training}"
  echo curl -s "${TRAINING_URI}" | sed -n 's/.*class="rh-cta-link".*href="\(https:\/\/www.redhat.com\)*\([^\"]\+\)" .*/\2/p' | grep -vE 'all-courses-exams|faq|contact-us'
  curl -s "${TRAINING_URI}" | sed -n 's/.*class="rh-cta-link".*href="\(https:\/\/www.redhat.com\)*\([^\"]\+\)" .*/\2/p' | grep -vE 'all-courses-exams|faq|contact-us'
done | sort -u > ${training_path}/${training_lang}-training.lst

# pull and parse the html course pages
# some course pages may not parse very well so they'll need some touch up
for uri in `cat ${training_path}/${training_lang}-training.lst`; do
  # reset title, filename, and class code variables on each pass to be able to detect failure
  course_title=""
  course_id=""
  filename=""

  doc=${uri##*/}

  # Skip the unreleased, but on the website CL310 course. This needs to be removed when the updated course is GA'd
  # See https://chat.google.com/room/AAAAow2XQH4/cRtr_nw9IRg for some details
  if [ "${doc}" == "cl310-red-hat-openstack-administration-iii-distributed-architecture-and-scaling-for-edge-computing" ]; then
    echo "Skipping updated CL310 course that is not GA as of 4/21/2021. Remove this check when the course is GA'd."
    echo
    continue
  fi

  echo - updating ${doc}

  echo curl -s -L -o "${training_path}/${doc}.html" "https://www.redhat.com/${uri}"
  curl -s -L -o "${training_path}/${doc}.html" "https://www.redhat.com/${uri}"
  # Determine the title of the class and ensure files are named consistently
  course_title=`sed -n 's/.*<title>\s*\(.*\)\s*<\/title>.*/\1/p' ${training_path}/${doc}.html`
  course_id=`sed -n 's|<meta name="courseid"\s*content="\([a-zA-Z0-9]*\).*".*|\1|p' ${training_path}/${doc}.html`
  filename=`echo ${course_id}.adoc | tr '[:upper:]' '[:lower:]'`

  if [[ -z "${course_id}" ]]; then
    echo "Skipping update for ${doc} with a title of ${course_title} because course number could not be identified"
    echo
    continue
  fi

  echo Saving to file ${filename}
  echo "= ${course_title}" > ${training_path}/${filename}

  awk '/rc-training--tab-header.*Overview/{flag=1; next} /rc-training--tab-header/{flag=0} flag' ${training_path}/${doc}.html | sed -e 's/\s*<[\/]\?h[123][^>]*>/\*/g' -e 's/<li[^>]*>/\* /' -e 's/<[^>]\+>//g' -e 's/^\s\+//' -e 's/\&reg[;]\?/(R)/g' -e 's/\&trade[;]\?/(TM)/g' -e 's/™/(TM)/g' -e 's/®/(R)/g' -e 's/\&nbsp[;]\?/ /g' | cat -s >> ${training_path}/${filename}

  echo -e "\nFor full details, or to enroll: +\nhttps://www.redhat.com${uri}" >> ${training_path}/${filename}
  rm ${training_path}/${doc}.html
  echo ""
done

rm ${training_path}/${training_lang}-training.lst

echo training content updated. This script is WIP - please check course docs in ${training_path} before using


